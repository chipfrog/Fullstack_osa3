{"version":3,"sources":["components/Person.js","components/Contacts.js","components/Filter.js","components/PersonForm.js","services/Communication.js","components/Notification.js","App.js","index.js"],"names":["Person","props","name","number","buttonFunction","deletePerson","react_default","a","createElement","onClick","showContacts","persons","filter","person","toLowerCase","includes","newFilter","map","components_Person","key","id","Filter","value","onChange","handler","Form","onSubmit","addName","nameHandler","numberHandler","type","url","Communication","axios","get","then","response","data","newContact","request","post","console","log","concat","newNumber","put","delete","Notification","message","className","class","App","_useState","useState","_useState2","Object","slicedToArray","setPersons","_useState3","_useState4","newName","setNewName","_useState5","_useState6","setNewNumber","_useState7","_useState8","setNewFilter","_useState9","_useState10","setMessage","_useState11","_useState12","messageStyle","setMessageStyle","useEffect","initialPersons","update","personToUpdate","index","setMessageSettings","updateContactsWithNewNumber","catch","error","hideDeleted","style","setTimeout","newList","copy","toConsumableArray","components_Notification","components_Filter","event","target","PersonForm","preventDefault","window","confirm","find","findIndex","returnedPerson","Contacts","personToDelete","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.9adc7119.chunk.js","sourcesContent":["import React from 'react'\n\nconst Person = (props) => {\n  const name = props.name\n  const number = props.number\n  const buttonFunction = props.deletePerson\n  \n  return (\n      <div>\n        {name} {number}\n        <button onClick={buttonFunction}>delete</button>\n      </div>\n    )\n}\n\nexport default Person","import React from 'react'\nimport Person from './Person'\n\n\nconst showContacts = (props) => {\n  const contactsToShow = props.persons.filter(person => \n  person.name.toLowerCase().includes(props.newFilter.toLowerCase()))\n  \n  return (\n    contactsToShow.map(person => \n      <Person key={person.id} name={person.name} \n      number={person.number} deletePerson={() => props.deletePerson(person.id)}/>)\n    )\n  \n  }\n\nexport default showContacts","import React from 'react'\n\nconst Filter = (props) => {\n  return (\n    <div>\n      filter shown with: <input\n      value={props.newFilter}\n      onChange={props.handler} />\n    </div>\n  )\n}\nexport default Filter","import React from 'react'\n\nconst Form = (props) => {\n  return (\n    <form onSubmit={props.addName}>\n      <div>\n        name: <input \n        value={props.name}\n        onChange={props.nameHandler} />\n      </div>\n      <div>\n        number: <input \n        value={props.number}\n        onChange={props.numberHandler} />\n      </div>\n      <div>\n        <button type=\"submit\">add</button>\n      </div>\n    </form>\n  )\n}\n\nexport default Form\n\n","import axios from 'axios'\n\nconst url = '/api/persons'\n\nconst getContacts = () => {\n  const request = axios.get(url)\n  return request.then(response => response.data)\n}\n\nconst create = newContact => {\n  const request = axios.post(url, newContact)\n  console.log(`Luodaan ${newContact.name} frontendistÃ¤`)\n  return request.then(response => response.data)\n}\n\nconst update = (person, newNumber) => {\n  const request = axios.put(`${url}/${person.id}`, {\n    name: person.name,\n    number: newNumber\n  })\n  return request.then(response => response.data)\n}\n\nconst deleteContact = (id) => {\n  const request = axios.delete(`${url}/${id}`)\n  return request.then(response => response.data)\n}\n\nexport default {getContacts, create, update, deleteContact}","import React from 'react'\n\nconst Notification = (props) => {\n  if (props.message === null) {\n    return null\n  }\n  return (\n    <div className={props.class}>\n      {props.message}\n    </div>\n  )\n}\n\nexport default Notification","import React, { useState, useEffect } from 'react'\nimport Contacts from './components/Contacts'\nimport Filter from './components/Filter'\nimport PersonForm from './components/PersonForm'\nimport Communication from './services/Communication'\nimport Notification from './components/Notification'\nimport './index.css'\n\nconst App = () => {\n  const [ persons, setPersons] = useState([]) \n  const [ newName, setNewName ] = useState('')\n  const [ newNumber, setNewNumber] = useState('')\n  const [ newFilter, setNewFilter ] = useState('')\n  const [ message, setMessage ] = useState(null)\n  const [ messageStyle, setMessageStyle ] = useState('')\n  \n  useEffect(() => {\n    Communication\n      .getContacts()\n      .then(initialPersons => {setPersons(initialPersons)})\n  }, [])\n\n  const addName = (event) => {\n    event.preventDefault()\n    const person = {\n      name: newName,\n      number: newNumber\n    }\n    if (newName === '' || newNumber === '') {\n      setMessage(`Name or number can't be empty!`)\n      setMessageSettings('error')\n      \n    } \n    else if (!persons.map(person => person.name).includes(newName)) {\n    Communication\n      .create(person)\n        .then(returnedPerson => {\n          setPersons(persons.concat(returnedPerson))\n        })\n        \n        setMessage(`${person.name} was added succesfully!`)\n        setMessageSettings('success')\n        setNewName('')\n        setNewNumber('')\n    \n    } else if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)) { \n        const personToUpdate = persons.find(person => person.name === newName)\n        const index = persons.findIndex(person => person.name === newName)\n        update(personToUpdate, index)\n    }\n  }\n  const update = (personToUpdate, index) => {\n    Communication\n          .update(personToUpdate, newNumber)\n          .then(response => {\n            setMessage(`Updated ${personToUpdate.name}'s number succesfully!`)\n            setMessageSettings('success')\n            updateContactsWithNewNumber(index)\n            console.log(newNumber)\n          })\n          .catch(error => {\n            setMessage(`Information of ${personToUpdate.name} has already been removed from the server`)\n            setMessageSettings('error') \n            hideDeleted(personToUpdate.id)\n          })\n    \n  }\n  \n  const handleDelete = (id) => {\n    const personToDelete = persons.find(person => person.id === id)\n    if (window.confirm('Delete ' + personToDelete.name + '?')) {\n      Communication\n        .deleteContact(id)\n        .then(setMessage(`Removed ${personToDelete.name} succesfully!`), setMessageSettings('success'))\n          \n      hideDeleted(id) \n    }\n  }\n\n  const setMessageSettings = (style) => {\n    setMessageStyle(`${style}`)\n    setTimeout(() => {setMessage(null)}, 3000)\n  }\n  \n  const hideDeleted = (id) => {\n    const newList = persons.filter(person => person.id !== id)\n    setPersons(newList) \n  }\n\n  const updateContactsWithNewNumber = (index) => {\n    const copy = [...persons]\n    copy[index].number = newNumber  \n    setPersons(copy)\n  }\n  \n  const handleNameChange = (event) => {\n    setNewName(event.target.value)\n  }\n\n  const handleNumberChange = (event) => {\n    setNewNumber(event.target.value)\n  }\n\n  const handleFiltering = (event) => {\n    setNewFilter(event.target.value)\n  }\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n        <Notification message={message} class={messageStyle} />\n        <Filter newFilter={newFilter} handler={handleFiltering}/>\n      <h2>add a new contact</h2>\n        <PersonForm addName={addName} name={newName} nameHandler={handleNameChange}\n        number={newNumber} numberHandler={handleNumberChange} />\n      <h2>Numbers</h2>\n        <Contacts persons={persons} deletePerson={handleDelete} newFilter={newFilter}/>\n    </div>\n  )\n}\nexport default App","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}